{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIL CHAMP\\\\OneDrive\\\\Desktop\\\\Green-Thumb-Effect\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]); // Define all_product state variable\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data)).catch(error => console.error(\"Error fetching products: \", error));\n  }, []);\n  const addToCart = itemId => {\n    if (!localStorage.getItem('')) console.log(itemId);\n    const J = JSON.stringify({\n      \"itemid\": itemId\n    });\n    console.log(J);\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: J\n      }).then(response => {\n        // Log the response for debugging\n        console.log(\"Server response:\", response);\n\n        // Check if response is successful\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        // Parse response as JSON\n        return response.json();\n      }).then(data => {\n        // Log the parsed data\n        console.log(\"Parsed response data:\", data);\n      }).catch(error => {\n        // Handle and log any errors\n        console.error(\"Error adding to cart: \", error);\n      });\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemid\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(\"Error removing from cart: \", error));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartAmount,\n    getTotalCartItems,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","then","response","json","data","catch","error","console","addToCart","itemId","localStorage","getItem","log","J","JSON","stringify","prev","method","headers","Accept","body","ok","Error","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LIL CHAMP/OneDrive/Desktop/Green-Thumb-Effect/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let index = 0; index < 300 + 1; index++) {\r\n    cart[index] = 0;\r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]); // Define all_product state variable\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/allproducts')\r\n      .then((response) => response.json())\r\n      .then((data) => setAll_Product(data))\r\n      .catch((error) => console.error(\"Error fetching products: \", error));\r\n  }, []);\r\n\r\n \r\n\r\n  const addToCart = (itemId) => {\r\n    if(!localStorage.getItem(''))\r\n    console.log(itemId); \r\n    const J=JSON.stringify({ \"itemid\": itemId });\r\n    console.log(J);\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    if (localStorage.getItem('auth-token')) {\r\n        fetch('http://localhost:4000/addtocart', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: J\r\n        })\r\n        .then((response) => {\r\n            // Log the response for debugging\r\n            console.log(\"Server response:\", response);\r\n            \r\n            // Check if response is successful\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            \r\n            // Parse response as JSON\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            // Log the parsed data\r\n            console.log(\"Parsed response data:\", data);\r\n        })\r\n        .catch((error) => {\r\n            // Handle and log any errors\r\n            console.error(\"Error adding to cart: \", error);\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    if(localStorage.getItem('auth-token')){\r\n      fetch('http://localhost:4000/removefromcart', {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'auth-token': `${localStorage.getItem('auth-token')}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \"itemid\": itemId }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => console.log(data))\r\n          .catch((error) => console.error(\"Error removing from cart: \", error));\r\n    }\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = all_product.find((product) => product.id === Number(item));\r\n        totalAmount += itemInfo.new_price * cartItems[item];\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem += cartItems[item];\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartAmount,\r\n    getTotalCartItems,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}