{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIL CHAMP\\\\OneDrive\\\\Desktop\\\\Green-Thumb-Effect\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]); // Define all_product state variable\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetchProducts();\n    fetchCartData();\n  }, []);\n  const fetchProducts = () => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data)).catch(error => console.error(\"Error fetching products: \", error));\n  };\n  const fetchCartData = () => {\n    if (localStorage.getItem('auth-token')) {\n      axios.post('http://localhost:4000/getcart', {}, {\n        headers: {\n          'auth-token': localStorage.getItem('auth-token'),\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        setCartItems(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching cart data: \", error);\n      });\n    }\n  };\n  const handleCheckout = () => {\n    if (!localStorage.getItem('auth-token')) {\n      alert(\"Please login to proceed to checkout.\");\n      return;\n    }\n    axios.post('http://localhost:4000/api/create-order', {\n      amount: getTotalCartAmount() * 100,\n      // Convert amount to paisa (Razorpay expects amount in paisa)\n      currency: 'INR',\n      receipt: 'order_receipt_' + Date.now(),\n      // Generate a unique receipt ID\n      payment_capture: 1 // Auto capture payment after order creation\n    }).then(response => {\n      const {\n        data\n      } = response;\n      const options = {\n        key: 'YOUR_RAZORPAY_KEY_ID',\n        // Replace with your Razorpay API key\n        amount: data.amount,\n        currency: data.currency,\n        order_id: data.id,\n        name: 'Your Website Name',\n        description: 'Description of your product/service',\n        handler: function (response) {\n          console.log(response); // Handle success\n        },\n        prefill: {\n          name: 'Customer Name',\n          email: 'customer@example.com'\n        }\n      };\n      const razorpayInstance = new window.Razorpay(options);\n      razorpayInstance.open();\n    }).catch(error => {\n      console.error(\"Error creating order: \", error);\n    });\n  };\n  const addToCart = itemId => {\n    if (!localStorage.getItem('auth-token')) {\n      alert(\"Please Login\");\n      return;\n    }\n    axios.post('http://localhost:4000/addtocart', {\n      itemid: itemId\n    }, {\n      headers: {\n        'auth-token': localStorage.getItem('auth-token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setCartItems(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] + 1\n      }));\n    }).catch(error => {\n      console.error(\"Error adding to cart: \", error);\n    });\n  };\n  const removeFromCart = itemId => {\n    axios.post('http://localhost:4000/removefromcart', {\n      itemid: itemId\n    }, {\n      headers: {\n        'auth-token': localStorage.getItem('auth-token'),\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setCartItems(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] - 1\n      }));\n    }).catch(error => {\n      console.error(\"Error removing from cart: \", error);\n    });\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartAmount,\n    getTotalCartItems,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    handleCheckout // Add handleCheckout to context value\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","axios","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetchProducts","fetchCartData","fetch","then","response","json","data","catch","error","console","localStorage","getItem","post","headers","handleCheckout","alert","amount","getTotalCartAmount","currency","receipt","Date","now","payment_capture","options","key","order_id","id","name","description","handler","log","prefill","email","razorpayInstance","window","Razorpay","open","addToCart","itemId","itemid","prev","removeFromCart","totalAmount","item","itemInfo","find","product","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LIL CHAMP/OneDrive/Desktop/Green-Thumb-Effect/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\nimport React, { useState, useEffect, createContext } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let index = 0; index < 300 + 1; index++) {\r\n    cart[index] = 0;\r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]); // Define all_product state variable\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCartData();\r\n  }, []);\r\n\r\n  const fetchProducts = () => {\r\n    fetch('http://localhost:4000/allproducts')\r\n      .then((response) => response.json())\r\n      .then((data) => setAll_Product(data))\r\n      .catch((error) => console.error(\"Error fetching products: \", error));\r\n  };\r\n\r\n  const fetchCartData = () => {\r\n    if(localStorage.getItem('auth-token')) {\r\n      axios.post('http://localhost:4000/getcart', {}, {\r\n        headers: {\r\n          'auth-token': localStorage.getItem('auth-token'),\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setCartItems(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching cart data: \", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (!localStorage.getItem('auth-token')) {\r\n      alert(\"Please login to proceed to checkout.\");\r\n      return;\r\n    }\r\n    axios.post('http://localhost:4000/api/create-order', {\r\n      amount: getTotalCartAmount() * 100, // Convert amount to paisa (Razorpay expects amount in paisa)\r\n      currency: 'INR',\r\n      receipt: 'order_receipt_' + Date.now(), // Generate a unique receipt ID\r\n      payment_capture: 1 // Auto capture payment after order creation\r\n    })\r\n    .then((response) => {\r\n      const { data } = response;\r\n      const options = {\r\n        key: 'YOUR_RAZORPAY_KEY_ID', // Replace with your Razorpay API key\r\n        amount: data.amount,\r\n        currency: data.currency,\r\n        order_id: data.id,\r\n        name: 'Your Website Name',\r\n        description: 'Description of your product/service',\r\n        handler: function (response) {\r\n          console.log(response); // Handle success\r\n        },\r\n        prefill: {\r\n          name: 'Customer Name',\r\n          email: 'customer@example.com'\r\n        }\r\n      };\r\n      const razorpayInstance = new window.Razorpay(options);\r\n      razorpayInstance.open();\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error creating order: \", error);\r\n    });\r\n  };\r\n\r\n  const addToCart = (itemId) => {\r\n    if (!localStorage.getItem('auth-token')) {\r\n      alert(\"Please Login\");\r\n      return;\r\n    }\r\n    axios.post('http://localhost:4000/addtocart', { itemid: itemId }, {\r\n      headers: {\r\n        'auth-token': localStorage.getItem('auth-token'),\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n    .then((response) => {\r\n      setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error adding to cart: \", error);\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    axios.post('http://localhost:4000/removefromcart', { itemid: itemId }, {\r\n      headers: {\r\n        'auth-token': localStorage.getItem('auth-token'),\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n    .then((response) => {\r\n      setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error removing from cart: \", error);\r\n    });\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = all_product.find((product) => product.id === Number(item));\r\n        totalAmount += itemInfo.new_price * cartItems[item];\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem += cartItems[item];\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartAmount,\r\n    getTotalCartItems,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    handleCheckout, // Add handleCheckout to context value\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}