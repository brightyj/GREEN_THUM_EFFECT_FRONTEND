{"ast":null,"code":"const addToCart = itemId => {\n  if (!itemId) {\n    console.error(\"Invalid itemId\");\n    return;\n  }\n  console.log(itemId);\n  const J = JSON.stringify({\n    \"itemid\": itemId\n  });\n  console.log(J);\n  setCartItems(prev => {\n    const updatedCartItems = {\n      ...prev\n    };\n    updatedCartItems[itemId] = (updatedCartItems[itemId] || 0) + 1;\n    return updatedCartItems;\n  });\n  if (localStorage.getItem('auth-token')) {\n    fetch('http://localhost:4000/addtocart', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'auth-token': `${localStorage.getItem('auth-token')}`,\n        'Content-Type': 'application/json'\n      },\n      body: J\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Parsed response data:\", data);\n    }).catch(error => {\n      console.error(\"Error adding to cart: \", error);\n    });\n  }\n};","map":{"version":3,"names":["addToCart","itemId","console","error","log","J","JSON","stringify","setCartItems","prev","updatedCartItems","localStorage","getItem","fetch","method","headers","Accept","body","then","response","ok","Error","json","data","catch"],"sources":["C:/Users/LIL CHAMP/OneDrive/Desktop/Green-Thumb-Effect/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["const addToCart = (itemId) => {\r\n    if (!itemId) {\r\n        console.error(\"Invalid itemId\");\r\n        return;\r\n    }\r\n\r\n    console.log(itemId);\r\n    const J = JSON.stringify({ \"itemid\": itemId });\r\n    console.log(J);\r\n    \r\n    setCartItems((prev) => {\r\n        const updatedCartItems = { ...prev };\r\n        updatedCartItems[itemId] = (updatedCartItems[itemId] || 0) + 1;\r\n        return updatedCartItems;\r\n    });\r\n\r\n    if (localStorage.getItem('auth-token')) {\r\n        fetch('http://localhost:4000/addtocart', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: J\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            console.log(\"Parsed response data:\", data);\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error adding to cart: \", error);\r\n        });\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAIC,MAAM,IAAK;EAC1B,IAAI,CAACA,MAAM,EAAE;IACTC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;IAC/B;EACJ;EAEAD,OAAO,CAACE,GAAG,CAACH,MAAM,CAAC;EACnB,MAAMI,CAAC,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAE,QAAQ,EAAEN;EAAO,CAAC,CAAC;EAC9CC,OAAO,CAACE,GAAG,CAACC,CAAC,CAAC;EAEdG,YAAY,CAAEC,IAAI,IAAK;IACnB,MAAMC,gBAAgB,GAAG;MAAE,GAAGD;IAAK,CAAC;IACpCC,gBAAgB,CAACT,MAAM,CAAC,GAAG,CAACS,gBAAgB,CAACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IAC9D,OAAOS,gBAAgB;EAC3B,CAAC,CAAC;EAEF,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;IACpCC,KAAK,CAAC,iCAAiC,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,YAAY,EAAG,GAAEL,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,EAAC;QACrD,cAAc,EAAE;MACpB,CAAC;MACDK,IAAI,EAAEZ;IACV,CAAC,CAAC,CACDa,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACZrB,OAAO,CAACE,GAAG,CAAC,uBAAuB,EAAEmB,IAAI,CAAC;IAC9C,CAAC,CAAC,CACDC,KAAK,CAAErB,KAAK,IAAK;MACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}